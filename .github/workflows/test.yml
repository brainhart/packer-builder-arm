name: CI
on:
  push:
    tags:
      - v*
    branches:
      master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Retrieve cache
        id: cache-key
        uses: actions/cache@v3
        with:
          path: packer-builder-arm
          key: key-${{ github.sha }}-1

      - name: Checkout
        if: steps.cache-key.outputs.cache-hit != 'true'
        uses: actions/checkout@v3.3.0

      - name: Set up Go 1.19
        if: steps.cache-key.outputs.cache-hit != 'true'
        uses: actions/setup-go@v3.5.0
        with:
          go-version: 1.19
        id: go

      - name: Get dependencies
        if: steps.cache-key.outputs.cache-hit != 'true'
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build
        if: steps.cache-key.outputs.cache-hit != 'true'
        run: go build -v .

      - name: Cache binary
        if: steps.cache-key.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        with:
          path: packer-builder-arm
          key: key-${{ github.sha }}-1

  test:
    needs: compile
    strategy:
      fail-fast: false
      matrix:
        boards:
          - beaglebone-black/debian.json
          - orangepi-zero2/debian.json
    name: Build ${{ matrix.boards }} image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Fetch additional packages
        run: |
          sudo apt-get update
          sudo apt-get install fdisk gdisk qemu-user-static libarchive-tools tar qemu qemu-utils

      - name: Install Packer
        uses: hashicorp-contrib/setup-packer@v2
        with:
          packer-version: 1.8.5

      - name: Retrieve cache
        uses: actions/cache@v3
        with:
          path: packer-builder-arm
          key: key-${{ github.sha }}-1

      - name: Install packer plugins
        if: ${{ endsWith(matrix.boards, '.hcl') }}
        run: PACKER_LOG=1 packer init boards/${{ matrix.boards }}

      - name: Validate
        run: PACKER_LOG=1 packer validate boards/${{ matrix.boards }}

      - name: Build image
        run: sudo PACKER_LOG=1 packer build boards/${{ matrix.boards }}
